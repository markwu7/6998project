{"ast":null,"code":"import _slicedToArray from\"/Users/marx/Desktop/partner-finder-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,createContext,useEffect,useState}from'react';import{GoogleAuthProvider,signInWithPopup,signOut,onAuthStateChanged}from'firebase/auth';import{auth}from'../firebase';import{jsx as _jsx}from\"react/jsx-runtime\";var AuthContext=/*#__PURE__*/createContext();export var AuthContextProvider=function AuthContextProvider(_ref){var children=_ref.children;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var googleSignIn=function googleSignIn(){var provider=new GoogleAuthProvider();signInWithPopup(auth,provider).then(function(result){// Validate email domain\nvar emailDomain=result.user.email.split('@')[1];var domainRegex=/columbia\\.edu$/i;// Regular expression for \"columbia.edu\" domain\nif(!domainRegex.test(emailDomain)){// If email domain is not \"columbia.edu\", sign out the user and display an error message\nsignOut(auth).then(function(){alert('Only \"columbia.edu\" email addresses are allowed for registration.');});}}).catch(function(error){// Handle sign-in error\nconsole.error('Google sign-in error:',error);});};var logOut=function logOut(){signOut(auth);};useEffect(function(){var unsubscribe=onAuthStateChanged(auth,function(currentUser){setUser(currentUser);console.log('User',currentUser);});return function(){unsubscribe();};},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{googleSignIn:googleSignIn,logOut:logOut,user:user},children:children});};export var UserAuth=function UserAuth(){return useContext(AuthContext);};","map":{"version":3,"names":["useContext","createContext","useEffect","useState","GoogleAuthProvider","signInWithPopup","signOut","onAuthStateChanged","auth","jsx","_jsx","AuthContext","AuthContextProvider","_ref","children","_useState","_useState2","_slicedToArray","user","setUser","googleSignIn","provider","then","result","emailDomain","email","split","domainRegex","test","alert","catch","error","console","logOut","unsubscribe","currentUser","log","Provider","value","UserAuth"],"sources":["/Users/marx/Desktop/partner-finder-app/src/context/AuthContext.js"],"sourcesContent":["import { useContext, createContext, useEffect, useState } from 'react';\nimport {\n  GoogleAuthProvider,\n  signInWithPopup,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport { auth } from '../firebase';\n\nconst AuthContext = createContext();\n\nexport const AuthContextProvider = ({ children }) => {\n  const [user, setUser] = useState({});\n\n  const googleSignIn = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider)\n    .then((result) => {\n      // Validate email domain\n      const emailDomain = result.user.email.split('@')[1];\n      const domainRegex = /columbia\\.edu$/i; // Regular expression for \"columbia.edu\" domain\n      if (!domainRegex.test(emailDomain)) {\n        // If email domain is not \"columbia.edu\", sign out the user and display an error message\n        signOut(auth).then(() => {\n          alert('Only \"columbia.edu\" email addresses are allowed for registration.');\n        });\n      }\n    })\n    .catch((error) => {\n      // Handle sign-in error\n      console.error('Google sign-in error:', error);\n    });\n  };\n\n  const logOut = () => {\n      signOut(auth)\n  }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n      console.log('User', currentUser)\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ googleSignIn, logOut, user }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const UserAuth = () => {\n  return useContext(AuthContext);\n};\n"],"mappings":"4HAAA,OAASA,UAAU,CAAEC,aAAa,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACtE,OACEC,kBAAkB,CAClBC,eAAe,CACfC,OAAO,CACPC,kBAAkB,KACb,eAAe,CACtB,OAASC,IAAI,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnC,GAAM,CAAAC,WAAW,cAAGV,aAAa,EAAE,CAEnC,MAAO,IAAM,CAAAW,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAAC,IAAA,CAAqB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAC5C,IAAAC,SAAA,CAAwBZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpB,GAAM,CAAAI,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,GAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAjB,kBAAkB,EAAE,CACzCC,eAAe,CAACG,IAAI,CAAEa,QAAQ,CAAC,CAC9BC,IAAI,CAAC,SAACC,MAAM,CAAK,CAChB;AACA,GAAM,CAAAC,WAAW,CAAGD,MAAM,CAACL,IAAI,CAACO,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACnD,GAAM,CAAAC,WAAW,CAAG,iBAAiB,CAAE;AACvC,GAAI,CAACA,WAAW,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAE,CAClC;AACAlB,OAAO,CAACE,IAAI,CAAC,CAACc,IAAI,CAAC,UAAM,CACvBO,KAAK,CAAC,mEAAmE,CAAC,CAC5E,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,KAAK,CAAK,CAChB;AACAC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CAAC,CAAC,CACJ,CAAC,CAED,GAAM,CAAAE,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAS,CACjB3B,OAAO,CAACE,IAAI,CAAC,CACjB,CAAC,CAEDN,SAAS,CAAC,UAAM,CACd,GAAM,CAAAgC,WAAW,CAAG3B,kBAAkB,CAACC,IAAI,CAAE,SAAC2B,WAAW,CAAK,CAC5DhB,OAAO,CAACgB,WAAW,CAAC,CACpBH,OAAO,CAACI,GAAG,CAAC,MAAM,CAAED,WAAW,CAAC,CAClC,CAAC,CAAC,CACF,MAAO,WAAM,CACXD,WAAW,EAAE,CACf,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACExB,IAAA,CAACC,WAAW,CAAC0B,QAAQ,EAACC,KAAK,CAAE,CAAElB,YAAY,CAAZA,YAAY,CAAEa,MAAM,CAANA,MAAM,CAAEf,IAAI,CAAJA,IAAK,CAAE,CAAAJ,QAAA,CACzDA,QAAQ,EACY,CAE3B,CAAC,CAED,MAAO,IAAM,CAAAyB,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CAC5B,MAAO,CAAAvC,UAAU,CAACW,WAAW,CAAC,CAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}